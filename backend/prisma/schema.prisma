// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
}

model User {
  id String @db.VarChar(100) @id @default(uuid())
  full_name String @db.VarChar(250)
  email String @unique @db.VarChar(100)
  password String @db.VarChar(250)
  address String? @db.Text
  phone_number String? @db.VarChar(15)
  profile_pic String? @db.Text
  about_me String? @db.Text
  role Role @default(customer)
  token String? @db.VarChar(250)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Category {
  id String @db.VarChar(100) @id @default(uuid())
  name String @db.VarChar(100)
  image String? @db.Text
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Product {
  id String @id @default(uuid())
  name String @db.VarChar(100)
  description String? @db.Text
  price String @db.VarChar(100)
  rate String @db.VarChar(50)
  colors Json[] @db.Json
  category_id String @db.VarChar(100)
  category Category @relation(fields: [category_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

// model Cart {
//   id String @id @default(uuid())
//   user_id String @db.VarChar(100)
//   user User @relation(fields: [user_id], references: [id])
//   items CartItem[]
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("carts")
// }

// model CartItem {
//   id String @id @default(uuid())
//   cart_id String @db.VarChar(100)
//   product_id String @db.VarChar(100)
//   product Product @relation(fields: [product_id], references: [id])
//   quantity Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("cart_item")
// }